com/linktop/constant/BluetoothState = Com.Linktop.Constant.BluetoothState
  <init>()V = .ctor()
  BLE_CLOSED = BleClosed
  BLE_CONNECTED_DEVICE = BleConnectedDevice
  BLE_CONNECTING_DEVICE = BleConnectingDevice
  BLE_NOTIFICATION_DISABLED = BleNotificationDisabled
  BLE_NOTIFICATION_ENABLED = BleNotificationEnabled
  BLE_OPENED_AND_DISCONNECT = BleOpenedAndDisconnect
com/linktop/constant/Constants = Com.Linktop.Constant.Constants
  <init>()V = .ctor()
  CONFIG_BP_RUN_ORIG_DATA = ConfigBpRunOrigData
  CONFIG_BP_SAVE_ORIG_DATA = ConfigBpSaveOrigData
  CONFIG_BT_USE_TEST2 = ConfigBtUseTest2
  CONFIG_ECG_OUTPUT_ARRAY_DATA = ConfigEcgOutputArrayData
  CONFIG_ECG_OUTPUT_RAW_DATA = ConfigEcgOutputRawData
  CONFIG_HRV_RESTING_HR = ConfigHrvRestingHr
  CONFIG_HRV_SAMPLING_RATE = ConfigHrvSamplingRate
  CONFIG_SPO2_FILE_PATH = ConfigSpo2FilePath
  CONFIG_SPO2_USE_75mA = CONFIGSPO2USE75mA
  ECG_KEY_HEART_AGE = EcgKeyHeartAge
  ECG_KEY_HEART_BEAT = EcgKeyHeartBeat
  ECG_KEY_HEART_RATE = EcgKeyHeartRate
  ECG_KEY_HRV = EcgKeyHrv
  ECG_KEY_HRV_FD = EcgKeyHrvFd
  ECG_KEY_HRV_TD = EcgKeyHrvTd
  ECG_KEY_MOOD = EcgKeyMood
  ECG_KEY_R2R = EcgKeyR2r
  ECG_KEY_RESPIRATORY_RATE = EcgKeyRespiratoryRate
  ECG_KEY_ROBUST_HR = EcgKeyRobustHr
  ECG_KEY_SMOOTH = EcgKeySmooth
  ECG_KEY_STRESS = EcgKeyStress
  ECG_SQ_GOOD = EcgSqGood
  ECG_SQ_MEDIUM = EcgSqMedium
  ECG_SQ_NOT_DETECTED = EcgSqNotDetected
  ECG_SQ_POOR = EcgSqPoor
  ECG_STRESS_LEVEL_HIGH = EcgStressLevelHigh
  ECG_STRESS_LEVEL_INVALID = EcgStressLevelInvalid
  ECG_STRESS_LEVEL_LOW = EcgStressLevelLow
  ECG_STRESS_LEVEL_MEDIUM = EcgStressLevelMedium
  ECG_STRESS_LEVEL_NO = EcgStressLevelNo
  ECG_STRESS_LEVEL_VERY_HIGH = EcgStressLevelVeryHigh
  SAMPLING_RATE_125_HZ = SamplingRate125Hz
  SAMPLING_RATE_250_HZ = SamplingRate250Hz
  SAMPLING_RATE_500_HZ = SamplingRate500Hz
com/linktop/constant/DeviceInfo = Com.Linktop.Constant.DeviceInfo
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string, string, string, string, string)
  getAKey()Ljava/lang/String; = AKey
  setAKey(Ljava/lang/String;)V = AKey
  getDeviceId()Ljava/lang/String; = DeviceId
  setDeviceId(Ljava/lang/String;)V = DeviceId
  getDeviceKey()Ljava/lang/String; = DeviceKey
  setDeviceKey(Ljava/lang/String;)V = DeviceKey
  getDeviceType()Ljava/lang/String; = DeviceType
  setDeviceType(Ljava/lang/String;)V = DeviceType
  getFactory()Ljava/lang/String; = Factory
  setFactory(Ljava/lang/String;)V = Factory
  getProdMonth()Ljava/lang/String; = ProdMonth
  setProdMonth(Ljava/lang/String;)V = ProdMonth
  getProdYear()Ljava/lang/String; = ProdYear
  setProdYear(Ljava/lang/String;)V = ProdYear
  getReserved()Ljava/lang/String; = Reserved
  setReserved(Ljava/lang/String;)V = Reserved
  setDeviceInfo(Lcom/linktop/constant/DeviceInfo;)V = SetDeviceInfo(Com.Linktop.Constant.DeviceInfo)
com/linktop/constant/IUserProfile = Com.Linktop.Constant.IUserProfile
  FEMALE = Female
  MALE = Male
  getBirthday()J = Birthday
  getGender()I = Gender
  getHeight()I = Height
  getUsername()Ljava/lang/String; = Username
  getWeight()I = Weight
com/linktop/constant/Pair = Com.Linktop.Constant.Pair
  create(Ljava/lang/Integer;Ljava/lang/Object;)Lcom/linktop/constant/Pair; = Create(Java.Lang.Integer, Java.Lang.Object)
com/linktop/constant/ResultData = Com.Linktop.Constant.ResultData
  <init>()V = .ctor()
  a = A
  b = B
  c = C
  d = D
  e = E
  f = F
  g = G
  h = H
  i = I
  j = J
  k = K
  l = L
  m = M
  n = N
  o = O
com/linktop/constant/TestPaper = Com.Linktop.Constant.TestPaper
  create(Ljava/lang/String;Ljava/lang/String;)Lcom/linktop/constant/TestPaper; = Create(string, string)
  getCode()Ljava/lang/String; = GetCode()
  getManufacturer()Ljava/lang/String; = GetManufacturer()
com/linktop/constant/UserDataType = Com.Linktop.Constant.IUserDataType
  AGE = Age
  HEIGHT = Height
  SEX = Sex
  WEIGHT = Weight
com/linktop/constant/UUIDConfig = Com.Linktop.Constant.UUIDConfig
  <init>()V = .ctor()
  CCC = Ccc
  DEV_INFO_FIRMWARE_REV_UUID = DevInfoFirmwareRevUuid
  DEV_INFO_HARDWARE_PCB_UUID = DevInfoHardwarePcbUuid
  DEV_INFO_SER_UUID = DevInfoSerUuid
  DEV_INFO_SOFTWARE_REV_UUID = DevInfoSoftwareRevUuid
  HEART_RATE_MEASUREMENT_CHARA = HeartRateMeasurementChara
  HEART_RATE_WRITE_CHARA = HeartRateWriteChara
  HRP_SERVICE = HrpService
  THERM_CONNECT_CONFIRM = ThermConnectConfirm
  THERM_QR_CODE = ThermQrCode
  THERM_QR_CODE_SERVICE = ThermQrCodeService
  THERM_SERVICE = ThermService
  getParcelUuid(Ljava/lang/String;)Landroid/os/ParcelUuid; = GetParcelUuid(string)
  getUUID(Ljava/lang/String;)Ljava/util/UUID; = GetUUID(string)
com/linktop/constant/WareType = Com.Linktop.Constant.IWareType
  VER_FIRMWARE = VerFirmware
  VER_HARDWARE = VerHardware
  VER_SOFTWARE = VerSoftware
com/linktop/DeviceType = Com.Linktop.IDeviceType
  HealthMonitor = HealthMonitor
  Thermometer = Thermometer
com/linktop/infs/AuthCheckResult = Com.Linktop.Infs.IAuthCheckResult
  onAuthCheckResult(Z)V = OnAuthCheckResult(bool)
  onAuthCheckResultTimeout()V = OnAuthCheckResultTimeout()
com/linktop/infs/IFingerDetector = Com.Linktop.Infs.IFingerDetector
  onFingerDetection(Z)V = OnFingerDetection(bool)
com/linktop/infs/OnBatteryListener = Com.Linktop.Infs.IOnBatteryListener
  onBatteryCharging()V = OnBatteryCharging()
  onBatteryFull()V = OnBatteryFull()
  onBatteryQuery(I)V = OnBatteryQuery(int)
com/linktop/infs/OnBleConnectListener = Com.Linktop.Infs.IOnBleConnectListener
  onBLENoSupported()V = OnBLENoSupported()
  onBleState(I)V = OnBleState(int)
  onOpenBLE()V = OnOpenBLE()
  onUpdateDialogBleList()V = OnUpdateDialogBleList()
com/linktop/infs/OnBpDataListener = Com.Linktop.Infs.IOnBpDataListener
  onFIRAvgFilter(Lcom/linktop/constant/ResultData;Z)V = OnFIRAvgFilter(Com.Linktop.Constant.ResultData, bool)
  onRcvPressure(I)V = OnRcvPressure(int)
com/linktop/infs/OnBpiResultListener = Com.Linktop.Infs.IOnBpiResultListener
com/linktop/infs/OnBpResultListener = Com.Linktop.Infs.IOnBpResultListener
  onBpResult(III)V = OnBpResult(int, int, int)
  onBpResultError()V = OnBpResultError()
  onLeakError(I)V = OnLeakError(int)
com/linktop/infs/OnBtFactoryListener = Com.Linktop.Infs.IOnBtFactoryListener
  a(DD)V = A(double, double)
  b(DD)V = B(double, double)
com/linktop/infs/OnBtResultListener = Com.Linktop.Infs.IOnBtResultListener
  onBtResult(D)V = OnBtResult(double)
com/linktop/infs/OnCuffLeakTestListener = Com.Linktop.Infs.IOnCuffLeakTestListener
  a(I)V = A(int)
com/linktop/infs/OnDeviceInfoListener = Com.Linktop.Infs.IOnDeviceInfoListener
  onDeviceInfo(Lcom/linktop/constant/DeviceInfo;)V = OnDeviceInfo(Com.Linktop.Constant.DeviceInfo)
  onReadDeviceInfoFailed()V = OnReadDeviceInfoFailed()
com/linktop/infs/OnDeviceVersionListener = Com.Linktop.Infs.IOnDeviceVersionListener
  onDeviceVersion(ILjava/lang/String;)V = OnDeviceVersion(int, string)
com/linktop/infs/OnEcgResultListener = Com.Linktop.Infs.IOnEcgResultListener
  onDrawWave(Ljava/lang/Object;)V = OnDrawWave(Java.Lang.Object)
  onECGValues(II)V = OnECGValues(int, int)
  onSignalQuality(I)V = OnSignalQuality(int)
com/linktop/infs/OnHRVResultListener = Com.Linktop.Infs.IOnHRVResultListener
  KEY_FATIGUE_INDEX = KeyFatigueIndex
  KEY_HBI_COUNT = KeyHbiCount
  KEY_LF_HF = KeyLfHf
  KEY_MEAN_HR = KeyMeanHr
  KEY_PSI = KeyPsi
  KEY_RMSSD = KeyRmssd
  KEY_SDNN = KeySdnn
  onHRVResult(ILjava/lang/Object;)V = OnHRVResult(int, Java.Lang.Object)
  onSignalData(II)V = OnSignalData(int, int)
com/linktop/infs/OnSaveDataListener = Com.Linktop.Infs.IOnSaveDataListener
com/linktop/infs/OnScanTempListener = Com.Linktop.Infs.IOnScanTempListener
  onNoTemp()V = OnNoTemp()
  onScanTempResult(Ljava/lang/String;DI)V = OnScanTempResult(string, double, int)
com/linktop/infs/OnSendCodeToDevCallback = Com.Linktop.Infs.IOnSendCodeToDevCallback
  onReceived()V = OnReceived()
com/linktop/infs/OnSpO2ResultListener = Com.Linktop.Infs.IOnSpO2ResultListener
  onSpO2End()V = OnSpO2End()
  onSpO2Result(II)V = OnSpO2Result(int, int)
  onSpO2Wave(I)V = OnSpO2Wave(int)
com/linktop/infs/OnTestPaperResultListener = Com.Linktop.Infs.IOnTestPaperResultListener
  onTestPaperEvent(ILjava/lang/Object;)V = OnTestPaperEvent(int, Java.Lang.Object)
  onTestPaperException(I)V = OnTestPaperException(int)
com/linktop/infs/OnThermInfoListener = Com.Linktop.Infs.IOnThermInfoListener
  onThermQRCode(Ljava/lang/String;)V = OnThermQRCode(string)
com/linktop/MonitorDataTransmission = Com.Linktop.MonitorDataTransmission
  a = A
  d = D
  e = E
  f = F
  getBatteryValue()I = BatteryValue
  getBleState()I = BleState
  getBluetoothDevice()Landroid/bluetooth/BluetoothDevice; = BluetoothDevice
  getDeviceList()Ljava/util/List; = DeviceList
  isCharging()Z = IsCharging
  isConnected()Z = IsConnected
  isEcgModuleExist()Z = IsEcgModuleExist
  isMeasureWrist()Z = IsMeasureWrist
  isMeasuring()Z = IsMeasuring
  isScanning()Z = IsScanning
  isTestPaperModuleDoubleADC()Z = IsTestPaperModuleDoubleADC
  isTestPaperModuleExist()Z = IsTestPaperModuleExist
  getUserProfile()Lcom/linktop/constant/IUserProfile; = UserProfile
  setUserProfile(Lcom/linktop/constant/IUserProfile;)V = UserProfile
  a(Ljava/lang/String;)Z = A(string)
  autoScan(Z)V = AutoScan(bool)
  bind(Ljava/lang/String;Landroid/content/Context;Lcom/linktop/MonitorDataTransmission$OnServiceBindListener;)V = Bind(string, Android.Content.Context, Com.Linktop.MonitorDataTransmission.IOnServiceBindListener)
  bleCheckOpen()V = BleCheckOpen()
  connectToBle(Landroid/bluetooth/BluetoothDevice;)V = ConnectToBle(Android.Bluetooth.BluetoothDevice)
  disConnectBle()V = DisConnectBle()
  getDevInfo(Lcom/linktop/infs/OnThermInfoListener;)V = GetDevInfo(Com.Linktop.Infs.IOnThermInfoListener)
  getTestPaperCalibration()V = GetTestPaperCalibration()
  needDeviceAuthCheck(Lcom/linktop/infs/AuthCheckResult;)V = NeedDeviceAuthCheck(Com.Linktop.Infs.IAuthCheckResult)
  onSDKThrowable(Ljava/lang/Throwable;)V = OnSDKThrowable(Java.Lang.Throwable)
  onServiceConnected(Landroid/content/ComponentName;Landroid/os/IBinder;)V = OnServiceConnected(Android.Content.ComponentName, Android.OS.IBinder)
  onServiceDisconnected(Landroid/content/ComponentName;)V = OnServiceDisconnected(Android.Content.ComponentName)
  pressureFromData(ZI)V = PressureFromData(bool, int)
  scan(Z)V = Scan(bool)
  setAutoScanPeriod(J)V = SetAutoScanPeriod(long)
  setBgVer()V = SetBgVer()
  setMeasurePosition(Z)V = SetMeasurePosition(bool)
  setOnBatteryListener(Lcom/linktop/infs/OnBatteryListener;)V = SetOnBatteryListener(Com.Linktop.Infs.IOnBatteryListener)
  setOnBleConnectListener(Lcom/linktop/infs/OnBleConnectListener;)V = SetOnBleConnectListener(Com.Linktop.Infs.IOnBleConnectListener)
  setOnBpDataListener(Lcom/linktop/infs/OnBpDataListener;)V = SetOnBpDataListener(Com.Linktop.Infs.IOnBpDataListener)
  setOnBpResultListener(Lcom/linktop/infs/OnBpResultListener;)V = SetOnBpResultListener(Com.Linktop.Infs.IOnBpResultListener)
  setOnBtResultListener(Lcom/linktop/infs/OnBtResultListener;)V = SetOnBtResultListener(Com.Linktop.Infs.IOnBtResultListener)
  setOnDeviceVersionListener(Lcom/linktop/infs/OnDeviceVersionListener;)V = SetOnDeviceVersionListener(Com.Linktop.Infs.IOnDeviceVersionListener)
  setOnDevIdAndKeyListener(Lcom/linktop/infs/OnDeviceInfoListener;)V = SetOnDevIdAndKeyListener(Com.Linktop.Infs.IOnDeviceInfoListener)
  setOnEcgResultListener(Lcom/linktop/infs/OnEcgResultListener;)V = SetOnEcgResultListener(Com.Linktop.Infs.IOnEcgResultListener)
  setOnHrvResultListener(Lcom/linktop/infs/OnHRVResultListener;)V = SetOnHrvResultListener(Com.Linktop.Infs.IOnHRVResultListener)
  setOnSpO2ResultListener(Lcom/linktop/infs/OnSpO2ResultListener;)V = SetOnSpO2ResultListener(Com.Linktop.Infs.IOnSpO2ResultListener)
  setScanDevNamePrefixWhiteList(I)V = SetScanDevNamePrefixWhiteList(int)
  setTestPaper(ILcom/linktop/constant/TestPaper;)V = SetTestPaper(int, Com.Linktop.Constant.TestPaper)
  startScanTemp(Landroid/bluetooth/BluetoothDevice;Lcom/linktop/infs/OnScanTempListener;)V = StartScanTemp(Android.Bluetooth.BluetoothDevice, Com.Linktop.Infs.IOnScanTempListener)
  stopMeasure()V = StopMeasure()
  stopScanTemp()V = StopScanTemp()
  unBind()V = UnBind()
com/linktop/MonitorDataTransmissionManager = Com.Linktop.MonitorDataTransmissionManager
  getInstance()Lcom/linktop/MonitorDataTransmissionManager; = Instance
  isDebug(Z)V = IsDebug(bool)
  setOnTestPaperResultListener(ILcom/linktop/infs/OnTestPaperResultListener;)V = SetOnTestPaperResultListener(int, Com.Linktop.Infs.IOnTestPaperResultListener)
  startMeasure(I[Lcom/linktop/constant/Pair;)V = StartMeasure(int, params Com.Linktop.Constant.Pair[])
  stopMeasure(I)V = StopMeasure(int)
com/linktop/receiver/BleEnableStateReceiver = Com.Linktop.Receiver.BleEnableStateReceiver
  <init>()V = .ctor()
  a()Landroid/content/IntentFilter; = A()
  b()V = B()
  c()V = C()
  d()V = D()
  e()V = E()
  onReceive(Landroid/content/Context;Landroid/content/Intent;)V = OnReceive(Android.Content.Context, Android.Content.Intent)
com/linktop/utils/AssetsDatabaseManager = Com.Linktop.Utils.AssetsDatabaseManager
  a()V = A()
  a(Landroid/content/Context;)V = A(Android.Content.Context)
  a(Ljava/lang/String;)Landroid/database/sqlite/SQLiteDatabase; = A(string)
  c()Lcom/linktop/utils/AssetsDatabaseManager; = C()
com/linktop/utils/BleDevLog = Com.Linktop.Utils.BleDevLog
  a = A
  a(Ljava/lang/Class;Ljava/lang/String;)V = A(Java.Lang.Class, string)
  a(Ljava/lang/String;)V = A(string)
  a(Ljava/lang/String;Ljava/lang/String;)V = A(string, string)
  b(Ljava/lang/String;Ljava/lang/String;)V = B(string, string)
  c(Ljava/lang/String;Ljava/lang/String;)V = C(string, string)
  d(Ljava/lang/String;Ljava/lang/String;)V = D(string, string)
  e(Ljava/lang/String;Ljava/lang/String;)V = E(string, string)
com/linktop/utils/ClassUtil = Com.Linktop.Utils.ClassUtil
  <init>()V = .ctor()
com/linktop/utils/FileHelper = Com.Linktop.Utils.FileHelper
  <init>()V = .ctor()
com/linktop/utils/HexUtils = Com.Linktop.Utils.HexUtils
  <init>()V = .ctor()
com/linktop/utils/KeepNotProguard = Com.Linktop.Utils.IKeepNotProguard
com/linktop/utils/LowPass = Com.Linktop.Utils.LowPass
com/linktop/utils/Translate = Com.Linktop.Utils.Translate
  <init>()V = .ctor()
  a(B)I = A(sbyte)
  a([B)Ljava/lang/String; = A(byte[])
  TempC2F(D)D = TempC2F(double)
com/linktop/whealthService/BleDevManager = Com.Linktop.WhealthService.BleDevManager
  <init>()V = .ctor()
  getAckTask()Lcom/linktop/whealthService/task/AckTask; = AckTask
  getBatteryTask()Lcom/linktop/whealthService/task/BatteryTask; = BatteryTask
  getBpTask()Lcom/linktop/whealthService/task/BpTask; = BpTask
  getBtTask()Lcom/linktop/whealthService/task/BtTask; = BtTask
  getCommunicate()Lcom/linktop/whealthService/util/Communicate; = Communicate
  getDeviceTask()Lcom/linktop/whealthService/task/DeviceTask; = DeviceTask
  getEcgTask()Lcom/linktop/whealthService/task/EcgTask; = EcgTask
  isMeasuring()Z = Measuring
  setMeasuring(Z)V = Measuring
  getOxTask()Lcom/linktop/whealthService/task/OxTask; = OxTask
  getSysErrorTask()Lcom/linktop/whealthService/task/SysErrorTask; = SysErrorTask
  getTestPaperTask()Lcom/linktop/whealthService/task/TestPaperTask; = TestPaperTask
  getUserProfile()Lcom/linktop/constant/IUserProfile; = UserProfile
  setUserProfile(Lcom/linktop/constant/IUserProfile;)V = UserProfile
  clearCmdToSend(BB)V = ClearCmdToSend(sbyte, sbyte)
  cmdToSend([B)V = CmdToSend(byte[])
  destroy()V = Destroy()
  initHC(Landroid/content/Context;Lcom/linktop/whealthService/BleDevManager$OnSDKThrowableCallback;)V = InitHC(Android.Content.Context, Com.Linktop.WhealthService.BleDevManager.IOnSDKThrowableCallback)
  onInnerThrowableCallback(Ljava/lang/Throwable;)V = OnInnerThrowableCallback(Java.Lang.Throwable)
  setCmdThread(Lcom/linktop/whealthService/BleDevManager$CmdThread;)V = SetCmdThread(Com.Linktop.WhealthService.BleDevManager.CmdThread)
  unInitHC()V = UnInitHC()
  updateBleConnectIntervalFailed()V = UpdateBleConnectIntervalFailed()
com/linktop/whealthService/BuildConfig = Com.Linktop.WhealthService.BuildConfig
  <init>()V = .ctor()
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/linktop/whealthService/MeasureType = Com.Linktop.WhealthService.IMeasureType
  BG = Bg
  BP = Bp
  BT = Bt
  CHOL = Chol
  ECG = Ecg
  HRV = Hrv
  SPO2 = Spo2
  UA = Ua
com/linktop/whealthService/OnBLEService = Com.Linktop.WhealthService.OnBLEService
  <init>()V = .ctor()
  B = B
  j = J
  P = P
  p = P
  getAckTask()Lcom/linktop/whealthService/task/AckTask; = AckTask
  getBatteryTask()Lcom/linktop/whealthService/task/BatteryTask; = BatteryTask
  getBpTask()Lcom/linktop/whealthService/task/BpTask; = BpTask
  getBtTask()Lcom/linktop/whealthService/task/BtTask; = BtTask
  getCommunicate()Lcom/linktop/whealthService/util/Communicate; = Communicate
  getDeviceTask()Lcom/linktop/whealthService/task/DeviceTask; = DeviceTask
  getEcgTask()Lcom/linktop/whealthService/task/EcgTask; = EcgTask
  isMeasuring()Z = Measuring
  setMeasuring(Z)V = Measuring
  getOxTask()Lcom/linktop/whealthService/task/OxTask; = OxTask
  getSysErrorTask()Lcom/linktop/whealthService/task/SysErrorTask; = SysErrorTask
  getTestPaperTask()Lcom/linktop/whealthService/task/TestPaperTask; = TestPaperTask
  getUserProfile()Lcom/linktop/constant/IUserProfile; = UserProfile
  setUserProfile(Lcom/linktop/constant/IUserProfile;)V = UserProfile
  a(Landroid/bluetooth/BluetoothDevice;)V = A(Android.Bluetooth.BluetoothDevice)
  a(Landroid/bluetooth/BluetoothDevice;I[B)V = A(Android.Bluetooth.BluetoothDevice, int, byte[])
  a(Landroid/bluetooth/BluetoothGattCharacteristic;Z)Z = A(Android.Bluetooth.BluetoothGattCharacteristic, bool)
  a(Z)V = A(bool)
  a(ZZ)V = A(bool, bool)
  a(Lcom/linktop/infs/OnBleConnectListener;)V = A(Com.Linktop.Infs.IOnBleConnectListener)
  a(Lcom/linktop/infs/OnDeviceInfoListener;)V = A(Com.Linktop.Infs.IOnDeviceInfoListener)
  a(Lcom/linktop/infs/OnDeviceVersionListener;)V = A(Com.Linktop.Infs.IOnDeviceVersionListener)
  a(I)V = A(int)
  a(Ljava/lang/String;Lcom/linktop/whealthService/OnBLEService$OnSDKThrowableCallback;)V = A(string, Com.Linktop.WhealthService.OnBLEService.IOnSDKThrowableCallback)
  a(J)V = A(long)
  b()V = B()
  clearCmdToSend(BB)V = ClearCmdToSend(sbyte, sbyte)
  cmdToSend([B)V = CmdToSend(byte[])
  d()V = D()
  d(I)V = D(int)
  f()V = F()
  h()I = H()
  i()Landroid/bluetooth/BluetoothDevice; = I()
  l()Ljava/util/TimerTask; = L()
  m()Z = M()
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
  onInnerThrowableCallback(Ljava/lang/Throwable;)V = OnInnerThrowableCallback(Java.Lang.Throwable)
  updateBleConnectIntervalFailed()V = UpdateBleConnectIntervalFailed()
com/linktop/whealthService/task/AckTask = Com.Linktop.WhealthService.Task.AckTask
  <init>(Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Com.Linktop.WhealthService.Util.IBleDev)
  a([B)V = A(byte[])
  dealData([B)V = DealData(byte[])
com/linktop/whealthService/task/BatteryTask = Com.Linktop.WhealthService.Task.BatteryTask
  <init>(Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Com.Linktop.WhealthService.Util.IBleDev)
  isCharging()Z = IsCharging
  getPower()I = Power
  batteryQuery()V = BatteryQuery()
  dealData([B)V = DealData(byte[])
  setBatteryStateListener(Lcom/linktop/infs/OnBatteryListener;)V = SetBatteryStateListener(Com.Linktop.Infs.IOnBatteryListener)
com/linktop/whealthService/task/BpTask = Com.Linktop.WhealthService.Task.BpTask
  <init>(Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Com.Linktop.WhealthService.Util.IBleDev)
  C = C
  H = H
  I = I
  J = J
  isMeasureWrist()Z = IsMeasureWrist
  a(ZI)V = A(bool, int)
  dealData([B)V = DealData(byte[])
  setMeasurePosition(Z)V = SetMeasurePosition(bool)
  setOnBpDataListener(Lcom/linktop/infs/OnBpDataListener;)V = SetOnBpDataListener(Com.Linktop.Infs.IOnBpDataListener)
  setOnBpResultListener(Lcom/linktop/infs/OnBpResultListener;)V = SetOnBpResultListener(Com.Linktop.Infs.IOnBpResultListener)
com/linktop/whealthService/task/BtTask = Com.Linktop.WhealthService.Task.BtTask
  <init>(Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Com.Linktop.WhealthService.Util.IBleDev)
  a([B)V = A(byte[])
  a(Lcom/linktop/infs/OnBtFactoryListener;)V = A(Com.Linktop.Infs.IOnBtFactoryListener)
  dealData([B)V = DealData(byte[])
  setOnBtResultListener(Lcom/linktop/infs/OnBtResultListener;)V = SetOnBtResultListener(Com.Linktop.Infs.IOnBtResultListener)
com/linktop/whealthService/task/DeviceTask = Com.Linktop.WhealthService.Task.DeviceTask
  <init>(Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Com.Linktop.WhealthService.Util.IBleDev)
  dealData([B)V = DealData(byte[])
  getDeviceInfo()V = GetDeviceInfo()
  setOnDeviceInfoListener(Lcom/linktop/infs/OnDeviceInfoListener;)V = SetOnDeviceInfoListener(Com.Linktop.Infs.IOnDeviceInfoListener)
com/linktop/whealthService/task/EcgTask = Com.Linktop.WhealthService.Task.EcgTask
  <init>(Landroid/content/Context;Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Android.Content.Context, Com.Linktop.WhealthService.Util.IBleDev)
  ecgStep = EcgStep
  isModuleExist()Z = ModuleExist
  setModuleExist(Z)V = ModuleExist
  checkModuleExist(Lcom/linktop/infs/OnSendCodeToDevCallback;)V = CheckModuleExist(Com.Linktop.Infs.IOnSendCodeToDevCallback)
  dealData([B)V = DealData(byte[])
  dealEcgVal([B)V = DealEcgVal(byte[])
  init([I)V = Init(params int[])
  queryEcgTestEnable()Z = QueryEcgTestEnable()
  setOnEcgResultListener(Lcom/linktop/infs/OnEcgResultListener;)V = SetOnEcgResultListener(Com.Linktop.Infs.IOnEcgResultListener)
  setParam()V = SetParam()
  unInit()V = UnInit()
com/linktop/whealthService/task/HcModuleTask = Com.Linktop.WhealthService.Task.HcModuleTask
  getIBleDev()Lcom/linktop/whealthService/util/IBleDev; = IBleDev
  start([Lcom/linktop/constant/Pair;)V = Start(params Com.Linktop.Constant.Pair[])
  stop()V = Stop()
com/linktop/whealthService/task/MethodOfBloodPressure = Com.Linktop.WhealthService.Task.MethodOfBloodPressure
  <init>(Lcom/linktop/whealthService/task/BpTask;)V = .ctor(Com.Linktop.WhealthService.Task.BpTask)
  z = Z
  a()I = A()
  a(Z)I = A(bool)
  a(III)V = A(int, int, int)
  a(IIIIIII)V = A(int, int, int, int, int, int, int)
  a([I[II)I = A(int[], int[], int)
  b()V = B()
  b(Z)I = B(bool)
  b([I[II)I = B(int[], int[], int)
  c(Z)I = C(bool)
  d()I = D()
  e()Lcom/linktop/constant/ResultData; = E()
  f()V = F()
  g()I = G()
  h()V = H()
  nativeAverageFilter([I[IIII)I = NativeAverageFilter(int[], int[], int, int, int)
  nativeFIRBandPass218([I[III)I = NativeFIRBandPass218(int[], int[], int, int)
  nativeGaussianProcess([III)V = NativeGaussianProcess(int[], int, int)
  nativeIIRBandPass([I[III)I = NativeIIRBandPass(int[], int[], int, int)
com/linktop/whealthService/task/ModuleTask = Com.Linktop.WhealthService.Task.ModuleTask
  <init>()V = .ctor()
  dealData([B)V = DealData(byte[])
com/linktop/whealthService/task/OxTask = Com.Linktop.WhealthService.Task.OxTask
  <init>(Landroid/content/Context;Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Android.Content.Context, Com.Linktop.WhealthService.Util.IBleDev)
  c = C
  a(Z)V = A(bool)
  b()I = B()
  c()Z = C()
  dealData([B)V = DealData(byte[])
  setOnHrvResultListener(Lcom/linktop/infs/OnHRVResultListener;)V = SetOnHrvResultListener(Com.Linktop.Infs.IOnHRVResultListener)
  setOnSpO2ResultListener(Lcom/linktop/infs/OnSpO2ResultListener;)V = SetOnSpO2ResultListener(Com.Linktop.Infs.IOnSpO2ResultListener)
com/linktop/whealthService/task/SysErrorTask = Com.Linktop.WhealthService.Task.SysErrorTask
  <init>(Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Com.Linktop.WhealthService.Util.IBleDev)
  dealData([B)V = DealData(byte[])
com/linktop/whealthService/task/TempNewTranslate = Com.Linktop.WhealthService.Task.TempNewTranslate
  <init>()V = .ctor()
com/linktop/whealthService/task/TestPaperTask = Com.Linktop.WhealthService.Task.TestPaperTask
  <init>(Landroid/content/Context;Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Android.Content.Context, Com.Linktop.WhealthService.Util.IBleDev)
  EVENT_BLOOD_SAMPLE_DETECTING = EventBloodSampleDetecting
  EVENT_PAPER_IN = EventPaperIn
  EVENT_PAPER_READ = EventPaperRead
  EVENT_TEST_RESULT = EventTestResult
  EVENT_TEST_RESULT_FAC = EventTestResultFac
  EXCEPTION_DEVICE_ERROR = ExceptionDeviceError
  EXCEPTION_PAPER_OUT = ExceptionPaperOut
  EXCEPTION_PAPER_USED = ExceptionPaperUsed
  EXCEPTION_TESTING_PAPER_OUT = ExceptionTestingPaperOut
  EXCEPTION_TIMEOUT_FOR_CHECK_PAPER_IN = ExceptionTimeoutForCheckPaperIn
  EXCEPTION_TIMEOUT_FOR_DETECT_BLOOD_SAMPLE = ExceptionTimeoutForDetectBloodSample
  TEST_PAPER_CALIBRATION_RESULT = TestPaperCalibrationResult
  TEST_PAPER_SET_VER_RESULT = TestPaperSetVerResult
  isDoubleADC()Z = IsDoubleADC
  isModuleExist()Z = IsModuleExist
  a(I)V = A(int)
  checkModuleExist(Lcom/linktop/infs/OnSendCodeToDevCallback;)V = CheckModuleExist(Com.Linktop.Infs.IOnSendCodeToDevCallback)
  dealData([B)V = DealData(byte[])
  f()V = F()
  getBgValue(D)I = GetBgValue(double)
  getBgValueForHMD([DD)[D = GetBgValueForHMD(double[], double)
  getValue(ILjava/lang/String;Ljava/lang/String;[D)D = GetValue(int, string, string, double[])
  j()V = J()
  setTestPaper(ILcom/linktop/constant/TestPaper;)V = SetTestPaper(int, Com.Linktop.Constant.TestPaper)
  setTestPaperResultListener(ILcom/linktop/infs/OnTestPaperResultListener;)V = SetTestPaperResultListener(int, Com.Linktop.Infs.IOnTestPaperResultListener)
  start(I)V = Start(int)
com/linktop/whealthService/task/ThermometerTask = Com.Linktop.WhealthService.Task.ThermometerTask
  <init>(Lcom/linktop/whealthService/OnBLEService;)V = .ctor(Com.Linktop.WhealthService.OnBLEService)
  l = L
  a()Z = A()
  a(Landroid/bluetooth/BluetoothDevice;Lcom/linktop/infs/OnScanTempListener;)V = A(Android.Bluetooth.BluetoothDevice, Com.Linktop.Infs.IOnScanTempListener)
  a(Lcom/linktop/infs/OnThermInfoListener;)V = A(Com.Linktop.Infs.IOnThermInfoListener)
  a(Lcom/linktop/whealthService/util/ParseByte;Landroid/bluetooth/BluetoothDevice;)V = A(Com.Linktop.WhealthService.Util.ParseByte, Android.Bluetooth.BluetoothDevice)
  a(Ljava/lang/String;)V = A(string)
com/linktop/whealthService/util/BleScanCompat = Com.Linktop.WhealthService.Util.BleScanCompat
  <init>(Landroid/bluetooth/BluetoothAdapter;)V = .ctor(Android.Bluetooth.BluetoothAdapter)
  a(Lcom/linktop/whealthService/util/BleScanCompat$BleScanCallback;)V = A(Com.Linktop.WhealthService.Util.BleScanCompat.IBleScanCallback)
  a([Ljava/lang/String;)V = A(params string[])
  c()V = C()
  f()V = F()
com/linktop/whealthService/util/Communicate = Com.Linktop.WhealthService.Util.Communicate
  <init>(Lcom/linktop/whealthService/util/IBleDev;)V = .ctor(Com.Linktop.WhealthService.Util.IBleDev)
  a()V = A()
  a(B[B)V = A(sbyte, byte[])
  a(Ljava/io/File;)V = A(Java.IO.File)
  authCheck(Lcom/linktop/infs/AuthCheckResult;)V = AuthCheck(Com.Linktop.Infs.IAuthCheckResult)
  b(Z)V = B(bool)
  needDeviceAuthCheck()Z = NeedDeviceAuthCheck()
  needDeviceAuthCheck(Lcom/linktop/infs/AuthCheckResult;)V = NeedDeviceAuthCheck(Com.Linktop.Infs.IAuthCheckResult)
  packageParse([B)V = PackageParse(byte[])
com/linktop/whealthService/util/IBleDev = Com.Linktop.WhealthService.Util.IBleDev
  getAckTask()Lcom/linktop/whealthService/task/AckTask; = AckTask
  getBatteryTask()Lcom/linktop/whealthService/task/BatteryTask; = BatteryTask
  getBpTask()Lcom/linktop/whealthService/task/BpTask; = BpTask
  getBtTask()Lcom/linktop/whealthService/task/BtTask; = BtTask
  getCommunicate()Lcom/linktop/whealthService/util/Communicate; = Communicate
  getDeviceTask()Lcom/linktop/whealthService/task/DeviceTask; = DeviceTask
  getEcgTask()Lcom/linktop/whealthService/task/EcgTask; = EcgTask
  isMeasuring()Z = Measuring
  setMeasuring(Z)V = Measuring
  getOxTask()Lcom/linktop/whealthService/task/OxTask; = OxTask
  getSysErrorTask()Lcom/linktop/whealthService/task/SysErrorTask; = SysErrorTask
  getTestPaperTask()Lcom/linktop/whealthService/task/TestPaperTask; = TestPaperTask
  getUserProfile()Lcom/linktop/constant/IUserProfile; = UserProfile
  setUserProfile(Lcom/linktop/constant/IUserProfile;)V = UserProfile
  clearCmdToSend(BB)V = ClearCmdToSend(sbyte, sbyte)
  cmdToSend([B)V = CmdToSend(byte[])
  onInnerThrowableCallback(Ljava/lang/Throwable;)V = OnInnerThrowableCallback(Java.Lang.Throwable)
  updateBleConnectIntervalFailed()V = UpdateBleConnectIntervalFailed()
com/linktop/whealthService/util/ParseByte = Com.Linktop.WhealthService.Util.ParseByte
  <init>([B)V = .ctor(byte[])
  a()B = A()
  b()Ljava/lang/String; = B()
  c()I = C()
com/linktop/whealthService/util/Protocol = Com.Linktop.WhealthService.Util.Protocol
  <init>()V = .ctor()
  a = A
com/neurosky/AlgoSdk/NskAlgoDataType = Com.Neurosky.AlgoSdk.NskAlgoDataType
  <init>(I)V = .ctor(int)
  NSK_ALGO_DATA_TYPE_BULK_ECG = NskAlgoDataTypeBulkEcg
  NSK_ALGO_DATA_TYPE_ECG = NskAlgoDataTypeEcg
  NSK_ALGO_DATA_TYPE_ECG_PQ = NskAlgoDataTypeEcgPq
  NSK_ALGO_DATA_TYPE_MAX = NskAlgoDataTypeMax
  getValue()I = Value
com/neurosky/AlgoSdk/NskAlgoECGStressLevel = Com.Neurosky.AlgoSdk.NskAlgoECGStressLevel
  <init>(I)V = .ctor(int)
  NSK_ALGO_ECG_STRESS_LEVEL_HIGH = NskAlgoEcgStressLevelHigh
  NSK_ALGO_ECG_STRESS_LEVEL_INVALID = NskAlgoEcgStressLevelInvalid
  NSK_ALGO_ECG_STRESS_LEVEL_LOW = NskAlgoEcgStressLevelLow
  NSK_ALGO_ECG_STRESS_LEVEL_MEDIUM = NskAlgoEcgStressLevelMedium
  NSK_ALGO_ECG_STRESS_LEVEL_NO = NskAlgoEcgStressLevelNo
  NSK_ALGO_ECG_STRESS_LEVEL_VERYHIGH = NskAlgoEcgStressLevelVeryhigh
  getValue()I = Value
com/neurosky/AlgoSdk/NskAlgoECGValueType = Com.Neurosky.AlgoSdk.NskAlgoECGValueType
  <init>(I)V = .ctor(int)
  NSK_ALGO_ECG_TYPE_UNKNOWN = NskAlgoEcgTypeUnknown
  NSK_ALGO_ECG_VALUE_TYPE_AFIB = NskAlgoEcgValueTypeAfib
  NSK_ALGO_ECG_VALUE_TYPE_BASELINE_UPDATED = NskAlgoEcgValueTypeBaselineUpdated
  NSK_ALGO_ECG_VALUE_TYPE_HEARTAGE = NskAlgoEcgValueTypeHeartage
  NSK_ALGO_ECG_VALUE_TYPE_HEARTBEAT = NskAlgoEcgValueTypeHeartbeat
  NSK_ALGO_ECG_VALUE_TYPE_HR = NskAlgoEcgValueTypeHr
  NSK_ALGO_ECG_VALUE_TYPE_HRV = NskAlgoEcgValueTypeHrv
  NSK_ALGO_ECG_VALUE_TYPE_HRV_FREQDOMAIN = NskAlgoEcgValueTypeHrvFreqdomain
  NSK_ALGO_ECG_VALUE_TYPE_HRV_TIMEDOMAIN = NskAlgoEcgValueTypeHrvTimedomain
  NSK_ALGO_ECG_VALUE_TYPE_MOOD = NskAlgoEcgValueTypeMood
  NSK_ALGO_ECG_VALUE_TYPE_R2R = NskAlgoEcgValueTypeR2r
  NSK_ALGO_ECG_VALUE_TYPE_RDETECTED = NskAlgoEcgValueTypeRdetected
  NSK_ALGO_ECG_VALUE_TYPE_RESPIRATORY_RATE = NskAlgoEcgValueTypeRespiratoryRate
  NSK_ALGO_ECG_VALUE_TYPE_ROBUST_HR = NskAlgoEcgValueTypeRobustHr
  NSK_ALGO_ECG_VALUE_TYPE_SMOOTH = NskAlgoEcgValueTypeSmooth
  NSK_ALGO_ECG_VALUE_TYPE_STRESS = NskAlgoEcgValueTypeStress
  getValue()I = Value
com/neurosky/AlgoSdk/NskAlgoProfile = Com.Neurosky.AlgoSdk.NskAlgoProfile
  <init>()V = .ctor()
  dob = Dob
  gender = Gender
  height = Height
  name = Name
  userId = UserId
  weight = Weight
com/neurosky/AlgoSdk/NskAlgoSampleRate = Com.Neurosky.AlgoSdk.NskAlgoSampleRate
  <init>(I)V = .ctor(int)
  NSK_ALGO_SAMPLE_RATE_256 = NskAlgoSampleRate256
  NSK_ALGO_SAMPLE_RATE_300 = NskAlgoSampleRate300
  NSK_ALGO_SAMPLE_RATE_512 = NskAlgoSampleRate512
  NSK_ALGO_SAMPLE_RATE_600 = NskAlgoSampleRate600
  getValue()I = Value
com/neurosky/AlgoSdk/NskAlgoSdk = Com.Neurosky.AlgoSdk.NskAlgoSdk
  <init>()V = .ctor()
  dateToStr(Ljava/util/Date;)Ljava/lang/String; = DateToStr(Java.Util.Date)
  NskAlgECGHRVFDAlgoIndexListener(FFFF)V = NskAlgECGHRVFDAlgoIndexListener(float, float, float, float)
  NskAlgECGHRVTDAlgoIndexListener(FFFFF)V = NskAlgECGHRVTDAlgoIndexListener(float, float, float, float, float)
  NskAlgoAlgoVersion(I)Ljava/lang/String; = NskAlgoAlgoVersion(int)
  NskAlgoDataStream(I[SI)I = NskAlgoDataStream(int, short[], int)
  NskAlgoECGAlgoIndexListener(II)V = NskAlgoECGAlgoIndexListener(int, int)
  NskAlgoInit(ILjava/lang/String;Ljava/lang/String;)I = NskAlgoInit(int, string, string)
  NskAlgoOverallSignalQualityListener(I)V = NskAlgoOverallSignalQualityListener(int)
  NskAlgoPause()I = NskAlgoPause()
  NskAlgoProfileActive(I)Z = NskAlgoProfileActive(int)
  NskAlgoProfileDelete(I)Z = NskAlgoProfileDelete(int)
  NskAlgoProfileGetBaseline(II)[B = NskAlgoProfileGetBaseline(int, int)
  NskAlgoProfiles()[Lcom/neurosky/AlgoSdk/NskAlgoProfile; = NskAlgoProfiles()
  NskAlgoProfileSetBaseline(II[B)Z = NskAlgoProfileSetBaseline(int, int, byte[])
  NskAlgoProfileUpdate(Lcom/neurosky/AlgoSdk/NskAlgoProfile;)Z = NskAlgoProfileUpdate(Com.Neurosky.AlgoSdk.NskAlgoProfile)
  NskAlgoQueryOverallQuality(I)Z = NskAlgoQueryOverallQuality(int)
  NskAlgoSdkStateChangeListener(II)V = NskAlgoSdkStateChangeListener(int, int)
  NskAlgoSdkVersion()Ljava/lang/String; = NskAlgoSdkVersion()
  NskAlgoSetECGConfigAfib(F)Z = NskAlgoSetECGConfigAfib(float)
  NskAlgoSetECGConfigHeartage(I)Z = NskAlgoSetECGConfigHeartage(int)
  NskAlgoSetECGConfigHRV(I)Z = NskAlgoSetECGConfigHRV(int)
  NskAlgoSetECGConfigHRVFD(II)Z = NskAlgoSetECGConfigHRVFD(int, int)
  NskAlgoSetECGConfigHRVTD(II)Z = NskAlgoSetECGConfigHRVTD(int, int)
  NskAlgoSetECGConfigStress(II)Z = NskAlgoSetECGConfigStress(int, int)
  NskAlgoSignalQualityListener(I)V = NskAlgoSignalQualityListener(int)
  NskAlgoStart(Z)I = NskAlgoStart(bool)
  NskAlgoStop()I = NskAlgoStop()
  NskAlgoUninit()I = NskAlgoUninit()
  setBaudRate(II)Z = SetBaudRate(int, int)
  setOnECGAlgoIndexListener(Lcom/neurosky/AlgoSdk/NskAlgoSdk$OnECGAlgoIndexListener;)V = SetOnECGAlgoIndexListener(Com.Neurosky.AlgoSdk.NskAlgoSdk.IOnECGAlgoIndexListener)
  setOnECGHRVFDAlgoIndexListener(Lcom/neurosky/AlgoSdk/NskAlgoSdk$OnECGHRVFDAlgoIndexListener;)V = SetOnECGHRVFDAlgoIndexListener(Com.Neurosky.AlgoSdk.NskAlgoSdk.IOnECGHRVFDAlgoIndexListener)
  setOnECGHRVTDAlgoIndexListener(Lcom/neurosky/AlgoSdk/NskAlgoSdk$OnECGHRVTDAlgoIndexListener;)V = SetOnECGHRVTDAlgoIndexListener(Com.Neurosky.AlgoSdk.NskAlgoSdk.IOnECGHRVTDAlgoIndexListener)
  setOnSignalQualityListener(Lcom/neurosky/AlgoSdk/NskAlgoSdk$OnSignalQualityListener;)V = SetOnSignalQualityListener(Com.Neurosky.AlgoSdk.NskAlgoSdk.IOnSignalQualityListener)
  setOnStateChangeListener(Lcom/neurosky/AlgoSdk/NskAlgoSdk$OnStateChangeListener;)V = SetOnStateChangeListener(Com.Neurosky.AlgoSdk.NskAlgoSdk.IOnStateChangeListener)
  setSignalQualityWatchDog(SS)Z = SetSignalQualityWatchDog(short, short)
  strToDate(Ljava/lang/String;)Ljava/util/Date; = StrToDate(string)
com/neurosky/AlgoSdk/NskAlgoSignalQuality = Com.Neurosky.AlgoSdk.NskAlgoSignalQuality
  <init>(I)V = .ctor(int)
  NSK_ALGO_SQ_GOOD = NskAlgoSqGood
  NSK_ALGO_SQ_MEDIUM = NskAlgoSqMedium
  NSK_ALGO_SQ_NOT_DETECTED = NskAlgoSqNotDetected
  NSK_ALGO_SQ_POOR = NskAlgoSqPoor
  getValue()I = Value
com/neurosky/AlgoSdk/NskAlgoState = Com.Neurosky.AlgoSdk.NskAlgoState
  <init>(I)V = .ctor(int)
  NSK_ALGO_REASON_BASELINE_EXPIRED = NskAlgoReasonBaselineExpired
  NSK_ALGO_REASON_BY_USER = NskAlgoReasonByUser
  NSK_ALGO_REASON_CB_CHANGED = NskAlgoReasonCbChanged
  NSK_ALGO_REASON_CONFIG_CHANGED = NskAlgoReasonConfigChanged
  NSK_ALGO_REASON_MASK = NskAlgoReasonMask
  NSK_ALGO_REASON_NO_BASELINE = NskAlgoReasonNoBaseline
  NSK_ALGO_REASON_SIGNAL_QUALITY = NskAlgoReasonSignalQuality
  NSK_ALGO_REASON_USER_PROFILE_CHANGED = NskAlgoReasonUserProfileChanged
  NSK_ALGO_STATE_COLLECTING_BASELINE_DATA = NskAlgoStateCollectingBaselineData
  NSK_ALGO_STATE_INITED = NskAlgoStateInited
  NSK_ALGO_STATE_MASK = NskAlgoStateMask
  NSK_ALGO_STATE_PAUSE = NskAlgoStatePause
  NSK_ALGO_STATE_RUNNING = NskAlgoStateRunning
  NSK_ALGO_STATE_STOP = NskAlgoStateStop
  NSK_ALGO_STATE_UNINTIED = NskAlgoStateUnintied
  getValue()I = Value
com/neurosky/AlgoSdk/NskAlgoType = Com.Neurosky.AlgoSdk.NskAlgoType
  <init>(I)V = .ctor(int)
  NSK_ALGO_TYPE_ECG_AFIB = NskAlgoTypeEcgAfib
  NSK_ALGO_TYPE_ECG_HEARTAGE = NskAlgoTypeEcgHeartage
  NSK_ALGO_TYPE_ECG_HEARTRATE = NskAlgoTypeEcgHeartrate
  NSK_ALGO_TYPE_ECG_HRV = NskAlgoTypeEcgHrv
  NSK_ALGO_TYPE_ECG_HRVFD = NskAlgoTypeEcgHrvfd
  NSK_ALGO_TYPE_ECG_HRVTD = NskAlgoTypeEcgHrvtd
  NSK_ALGO_TYPE_ECG_MOOD = NskAlgoTypeEcgMood
  NSK_ALGO_TYPE_ECG_RESPIRATORY = NskAlgoTypeEcgRespiratory
  NSK_ALGO_TYPE_ECG_SMOOTH = NskAlgoTypeEcgSmooth
  NSK_ALGO_TYPE_ECG_STRESS = NskAlgoTypeEcgStress
  getValue()I = Value
lib/lt/ox/HRVCal = Lib.LT.OX.HRVCal
  <init>(IILcom/linktop/infs/OnHRVResultListener;)V = .ctor(int, int, Com.Linktop.Infs.IOnHRVResultListener)
  v = V
  a(I)V = A(int)
lib/lt/ox/PPGSgn = Lib.LT.OX.PPGSgn
  <init>(JDDI)V = .ctor(long, double, double, int)
  <init>(JDI)V = .ctor(long, double, int)
  a = A
  b = B
  c = C
  d = D
lib/lt/ox/SPO2Cal = Lib.LT.OX.SPO2Cal
  <init>(Lcom/linktop/infs/OnSpO2ResultListener;)V = .ctor(Com.Linktop.Infs.IOnSpO2ResultListener)
  a([I)V = A(params int[])
